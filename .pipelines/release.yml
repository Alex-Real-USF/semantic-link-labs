trigger:
- main

variables:
  CDP_DEFINITION_BUILD_COUNT: $[counter('', 0)] # needed for onebranch.pipeline.version task https://aka.ms/obpipelines/versioning
  DEBIAN_FRONTEND: noninteractive
  ONEBRANCH_AME_ACR_LOGIN: onebranch.azurecr.io, cdpxc6831413381e411fbd131082b9d4403b00.azurecr.io

  CONTAINER_IMAGE_PREFIX: cdpxc6831413381e411fbd131082b9d4403b00.azurecr.io/c6831413-381e-411f-bd13-1082b9d4403b/official
  ob_outputDirectory: '$(Build.SourcesDirectory)/out' # this directory is uploaded to pipeline artifacts, reddog and cloudvault. More info at https://aka.ms/obpipelines/artifacts

parameters:
- name: dry_run
  displayName: 'Dry run (does not publish to ESRP)'
  type: boolean
  default: true
- name: semantic_link_labs_ref
  displayName: 'semantic-link-labs ref'
  type: string
  default: 'ref/heads/main'

resources:
  repositories:
    - repository: templates
      type: git
      name: OneBranch.Pipelines/GovernedTemplates
      ref: refs/heads/main

    - repository: semantic-link-labs
      type: github
      endpoint: GitHub.com/Microsoft
      name: microsoft/semantic-link-labs
      ref: ${{ variables['semantic_link_labs_ref'] }}

extends:
  template: v2/OneBranch.NonOfficial.CrossPlat.yml@templates # https://aka.ms/obpipelines/templates

  parameters:
    globalSdl: # https://aka.ms/obpipelines/sdl
      credscan:
        enabled: true
      policheck:
        break: true # always break the build on policheck issues. You can disable it by setting to 'false'

    stages:
    - stage: build_stage

      jobs:
      - job: build_job
        pool:
          type: linux

        variables: # More settings at https://aka.ms/obpipelines/yaml/jobs
          LinuxContainerImage: ${{ variables.CONTAINER_IMAGE_PREFIX }}/$(CONTAINER):$(CONTAINER_TAG)
          ob_outputDirectory: '${{ variables.ob_outputDirectory }}' # this directory is uploaded to pipeline artifacts, reddog and cloudvault. More info at https://aka.ms/obpipelines/artifacts
          ob_artifactSuffix: $(CONTAINER)

        strategy:
          matrix:
            # Python310-34:
            #   NAME: 'mariner'
            #   PYTHON_VERSION: '3.10'
            #   SPARK_VERSION: '3.4'
            #   JAVA_VERSION: '11'
            #   CONTAINER: spark34conda
            #   CONTAINER_TAG: 20240517.3
            Python311-35:
              NAME: 'mariner'
              PYTHON_VERSION: '3.11'
              SPARK_VERSION: '3.5'
              JAVA_VERSION: '11'
              CONTAINER: spark35conda
              CONTAINER_TAG: 20240517.2

        steps:
        - checkout: self
        - checkout: microsoft/semantic-link-functions

        # CFS
        - task: PipAuthenticate@1
          displayName: 'Private Conda Feed Authentication'
          inputs:
            artifactFeeds: 'A365/SynapseML-Enya'

        # Source Activate
        - bash: |
            echo "source /usr/lib/miniforge3/bin/activate /usr/lib/miniforge3/envs/FabricCPU" >> ~/.bashrc
            source ~/.bashrc
          displayName: 'Source Activate'
        
        # Install local package
        - bash: |
            source ~/.bashrc

            pip install .
            pip install flake8 mypy black pytest types-requests pytest-cov
          workingDirectory: semantic-link-labs
          displayName: 'Pip install package with dependencies'

        # Linting
        - bash: |
            source ~/.bashrc

            flake8 . --count --show-source --statistics
          workingDirectory: semantic-link-labs
          displayName: 'Lint with flake8'
          continueOnError: true

        - bash: |
            source ~/.bashrc

            mypy sempy tests tools
          workingDirectory: semantic-link-labs
          displayName: 'Type check with mypy'
          continueOnError: true

        # Build wheel
        - bash: |
            source ~/.bashrc

            python setup.py bdist_wheel
          workingDirectory: semantic-link-labs
          displayName: 'Build Wheel'

        - task: CopyFiles@2
          displayName: 'Copy wheel to output'
          inputs:
            Contents: '$(System.DefaultWorkingDirectory)/semantic-link-labs/dist/*.whl'
            TargetFolder: '${{ variables.ob_outputDirectory }}'

        # # Unit tests
        # - bash: |
        #     source ~/.bashrc

        #     pytest -s --junitxml=junit/test-results.xml --cov=sempy --cov-report=xml
        #   env:
        #     ut_password: $(AdminUser-SynapseMLFabricIntegration)
        #     ut_env: prod
        #   workingDirectory: SynapseML-Enya
        #   displayName: 'Run tests'

        # - task: PublishCodeCoverageResults@1
        #   inputs:
        #     codeCoverageTool: Cobertura
        #     summaryFileLocation: '$(System.DefaultWorkingDirectory)/SynapseML-Enya/**/coverage.xml'
        #     reportDirectory: '$(System.DefaultWorkingDirectory)/SynapseML-Enya/**/htmlcov'

        # - task: CopyFiles@2
        #   displayName: 'Copy Logs'
        #   inputs:
        #     Contents: '$(System.DefaultWorkingDirectory)/SynapseML-Enya/.pytest_cache/test.log'
        #     TargetFolder: '${{ variables.ob_outputDirectory }}'
        #     flattenFolders: True
        #   condition: succeededOrFailed()

        # checkout to OneBranch repo for post processing
        - checkout: templates

        # - task: EsrpRelease@7
        #   ${{ if eq(parameters.dry_run, false) }}:
        #     condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
        #   ${{ else }}:
        #     condition: false
        #   inputs:
        #     ConnectedServiceName: 'DataScienceESRPRelease2024'
        #     keyvaultname: 'synapseml-esrp-kv'
        #     authcertname: 'ReleaseAutomation'
        #     signcertname: 'ESRPReqSignCA'
        #     clientid: '1fc1c0d1-5a85-4081-8f1e-12a8c225b9a6'
        #     Intent: 'PackageDistribution'
        #     ContentType: 'PyPI'
        #     # ContentType: 'Maven' # use maven to test, ContentType validation is the last step, so it can be used to test releasing (recommended by ESRP team in their sharepoint)
        #     contentsource: 'Folder'
        #     folderlocation: '$(System.DefaultWorkingDirectory)/SynapseML-Enya/dist'
        #     Owners: 'richwyd@microsoft.com,taniaarya@microsoft.com,marcozo@microsoft.com,romanbat@microsoft.com'
        #     Approvers: 'romanbat@microsoft.com,markus.weimer@microsoft.com,negust@microsoft.com'
        #     ServiceEndpointUrl: 'https://api.esrp.microsoft.com'
        #     MainPublisher: 'synapseml'
        #     DomainTenantId: '72f988bf-86f1-41af-91ab-2d7cd011db47'
        #     waitforreleasecompletion: true
        #   displayName: 'ESRP Publish Semantic Link'